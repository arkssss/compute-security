# message = "bac"
#
# # 将字符串以ascii转为byte格式
# mess_byte = message.encode('ascii')
#
# the_num = hex((0x0000 ^ 0xeeee))[2:]
#
# print(the_num)
# by = bytes.fromhex(the_num)
#
#
# print(by)
import random
import crypt
from big_number import BigNumber
from rsa.prime import getprime
from Crypto.PublicKey.ElGamal import generate
import Crypto.PublicKey.ElGamal as el
import hashlib
# print(random.randint(0, 10))
# print(getprime(2048))
# num = 17196436495452502829989365315390098068622243724238116313418296844506215587290890796220161671484495627081344324799533919409968617323229253601686323986645502275328439144271402746037411809497590166424531306051643638922597100957381935059157381692771107448140613271858096223006957852835200398362695922555706573359478778036983950597753265118443785640482665559627190544581704922507594030791071847223262399653381939554668871450929407727281634055688110587963909569090373132794085902257003087509708031081390006338889090932990084619816090019686516633588000239716652374796327241926271059348589562619152234805890859707656759809977
# print(len(hex(num)))
# print(BigNumber.get_inverse(3, 7))
# BigNumber.get_generator(22)
# print(pow(2, 2, 3))

# pbj = el.generate(1024, randfunc=None)
# print(pbj.p)

# print(BigNumber.get_generator(23))
# print(hash("asdasdasds"))
obj = hashlib.sha256("asdasdasds".encode("ascii"))
print(obj.hexdigest())

print(pow(2,4))